/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/YPMmbW5UzzT
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Libre_Baskerville } from 'next/font/google'
import { Arimo } from 'next/font/google'

libre_baskerville({
  subsets: ['latin'],
  display: 'swap',
})

arimo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import { useState } from "react";

const predefinedInterests = [
  { label: "Landmarks", icon: <LandmarkIcon className="mr-2 h-4 w-4" /> },
  { label: "Museums", icon: <LibraryIcon className="mr-2 h-4 w-4" /> },
  { label: "Parks", icon: <TreesIcon className="mr-2 h-4 w-4" /> },
  { label: "Food", icon: <UtensilsIcon className="mr-2 h-4 w-4" /> },
  { label: "Pub Crawl", icon: <BeerIcon className="mr-2 h-4 w-4" /> },
];

export function InterestsForm({
  cityName,
  onBack,
  onSubmit,
}: {
  cityName: string;
  onBack: () => void;
  onSubmit: (interests: string) => void;
}) {
  const [interests, setInterests] = useState("");

  return (
    <div className="flex flex-col items-center justify-center h-screen">
      <div className="max-w-md w-full px-4 sm:px-6">
        <div className="space-y-4 text-center">
          <h1 className="text-4xl font-bold text-primary-foreground">
            <Button
              className="rounded-full bg-primary/10 p-2 h-auto mr-2 text-primary-foreground transition-colors hover:bg-primary/20 focus:outline-none focus:ring-2 focus:ring-primary align-middle"
              onClick={onBack}
            >
              <ArrowLeftIcon className="h-4 w-4" />
            </Button>
            City Sage
          </h1>
          <p className="text-lg text-primary-foreground/80">
            What do you want to see in{" "}
            <a className="text-primary-foreground italic capitalize underline underline-offset-4 decoration-2 hover:text-primary transition-all cursor-pointer white" onClick={onBack}>
              {" "}{cityName}{" "}
            </a>
            {" ?"}
          </p>
          <div className="flex flex-wrap justify-center gap-2">
            {predefinedInterests.map(({ label, icon }) => (
              <Button
                key={label}
                className="rounded-full bg-primary/10 px-4 py-2 text-sm font-medium text-primary-foreground transition-colors hover:bg-primary/20 focus:outline-none focus:ring-2 focus:ring-primary border border-white-500/75"
                onClick={() => onSubmit(label)}
              >
                {icon}
                {label}
              </Button>
            ))}
          </div>
          <form
            className="relative"
            onSubmit={(e) => {
              e.preventDefault();
              onSubmit(interests);
            }}
          >
            <Input
              type="text"
              placeholder="What are your interests?"
              className="w-full rounded-full bg-primary/10 px-4 py-3 text-primary-foreground placeholder:text-primary-foreground/60 focus:outline-none focus:ring-primary"
              autoFocus
              value={interests}
              onChange={(e) => setInterests(e.target.value)}
            />
            <div className="mt-2">
              <Button
                type="submit"
                disabled={!interests}
                className="w-full rounded-lg bg-primary px-4 py-2 text-sm font-medium text-primary-foreground transition-colors hover:bg-primary/90 focus:outline-none focus:ring-2 focus:ring-primary"
              >
                See your Walking Tour
              </Button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}

function BeerIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M17 11h1a3 3 0 0 1 0 6h-1" />
      <path d="M9 12v6" />
      <path d="M13 12v6" />
      <path d="M14 7.5c-1 0-1.44.5-3 .5s-2-.5-3-.5-1.72.5-2.5.5a2.5 2.5 0 0 1 0-5c.78 0 1.57.5 2.5.5S9.44 2 11 2s2 1.5 3 1.5 1.72-.5 2.5-.5a2.5 2.5 0 0 1 0 5c-.78 0-1.5-.5-2.5-.5Z" />
      <path d="M5 8v12a2 2 0 0 0 2 2h8a2 2 0 0 0 2-2V8" />
    </svg>
  );
}

function LandmarkIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="3" x2="21" y1="22" y2="22" />
      <line x1="6" x2="6" y1="18" y2="11" />
      <line x1="10" x2="10" y1="18" y2="11" />
      <line x1="14" x2="14" y1="18" y2="11" />
      <line x1="18" x2="18" y1="18" y2="11" />
      <polygon points="12 2 20 7 4 7" />
    </svg>
  );
}

function LibraryIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m16 6 4 14" />
      <path d="M12 6v14" />
      <path d="M8 8v12" />
      <path d="M4 4v16" />
    </svg>
  );
}

function TreesIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M10 10v.2A3 3 0 0 1 8.9 16v0H5v0h0a3 3 0 0 1-1-5.8V10a3 3 0 0 1 6 0Z" />
      <path d="M7 16v6" />
      <path d="M13 19v3" />
      <path d="M12 19h8.3a1 1 0 0 0 .7-1.7L18 14h.3a1 1 0 0 0 .7-1.7L16 9h.2a1 1 0 0 0 .8-1.7L13 3l-1.4 1.5" />
    </svg>
  );
}

function UtensilsIcon(props: any) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M3 2v7c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V2" />
      <path d="M7 2v20" />
      <path d="M21 15V2v0a5 5 0 0 0-5 5v6c0 1.1.9 2 2 2h3Zm0 0v7" />
    </svg>
  );
}

function ArrowLeftIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m12 19-7-7 7-7" />
      <path d="M19 12H5" />
    </svg>
  );
}
